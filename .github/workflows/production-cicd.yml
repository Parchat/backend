name: Deploy Backend-Production to GCP VM

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    name: ðŸš€ðŸ›  Deploy PRODUCTION Golang to GCP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      # ðŸ‘‰ Build la imagen Docker
      - name: Build Docker image
        run: docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/backend-prod:${{ github.sha }} .

      # ðŸ‘‰ Log in to DockerHub
      - name: DockerHub Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # ðŸ‘‰ Push la imagen
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/backend-prod:${{ github.sha }}

      # ðŸ‘‰ Add VM to known_hosts
      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.GCP_VM_IP }} >> ~/.ssh/known_hosts

      - name: Actualizar o agregar imagen en .env
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd /home/${{ secrets.WORK_DIR }}/
            sed -i '/^DOCKER_IMAGE_BACKEND_PROD=/d' .env
            echo "DOCKER_IMAGE_BACKEND_PROD=${{ secrets.DOCKER_USERNAME }}/backend-prod:${{ github.sha }}" >> .env

      # ðŸ‘‰ Desplegar en la VM
      - name: Deploy on GCP VM
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd /home/${{ secrets.WORK_DIR }}/
            docker compose up -d backend-prod --build