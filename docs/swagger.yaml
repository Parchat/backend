basePath: /api/v1/
definitions:
  handlers.PayloadSignUp:
    properties:
      displayName:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  models.CreateRoomRequest:
    properties:
      description:
        type: string
      isPrivate:
        type: boolean
      name:
        type: string
      userIds:
        description: IDs of users to be added to the room
        items:
          type: string
        type: array
    type: object
  models.DirectChat:
    properties:
      createdAt:
        type: string
      id:
        type: string
      isDeleted:
        type: boolean
      lastMessage:
        $ref: '#/definitions/models.Message'
      updatedAt:
        type: string
      userIds:
        items:
          type: string
        type: array
    type: object
  models.Message:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      isDeleted:
        type: boolean
      roomId:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  models.MessageResponse:
    properties:
      content:
        type: string
      createdAt:
        type: string
      displayName:
        type: string
      id:
        type: string
      isDeleted:
        type: boolean
      roomId:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  models.PaginatedMessagesResponse:
    properties:
      hasMore:
        type: boolean
      messages:
        items:
          $ref: '#/definitions/models.MessageResponse'
        type: array
      nextCursor:
        type: string
    type: object
  models.Room:
    properties:
      admins:
        items:
          type: string
        type: array
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      isDeleted:
        type: boolean
      isPrivate:
        type: boolean
      lastMessage:
        $ref: '#/definitions/models.Message'
      members:
        items:
          type: string
        type: array
      name:
        type: string
      ownerId:
        type: string
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        description: BlockedUsers []string  `json:"blockedUsers" firestore:"blockedUsers"`
        type: string
      displayName:
        type: string
      email:
        type: string
      isDeleted:
        type: boolean
      lastSeen:
        type: string
      photoUrl:
        type: string
      status:
        type: string
      uid:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: parchat.soporte@gmail.com
    name: Parchat Support
    url: https://pachat.online/support
  description: This is Parchat API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://pachat.online/terms/
  title: Parchat API
  version: "1.0"
paths:
  /auth/me:
    get:
      consumes:
      - application/json
      description: Devuelve los datos del usuario autenticado basado en el ID del
        contexto
      produces:
      - application/json
      responses:
        "200":
          description: Datos del usuario actual
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene el usuario actual
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Crea un nuevo usuario en Firebase Authentication y lo guarda en
        Firestore
      parameters:
      - description: Datos del usuario a registrar
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.PayloadSignUp'
      produces:
      - application/json
      responses:
        "201":
          description: Usuario creado exitosamente
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Solicitud inválida
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      summary: Registra un nuevo usuario
      tags:
      - Auth
  /chat/direct/{chatId}/messages/paginated:
    get:
      consumes:
      - application/json
      description: Devuelve los mensajes de un chat directo específico
      parameters:
      - description: ID del chat directo
        in: path
        name: chatId
        required: true
        type: string
      - default: 50
        description: Límite de mensajes a obtener
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de mensajes del chat directo
          schema:
            items:
              $ref: '#/definitions/models.Message'
            type: array
        "401":
          description: No autorizado
          schema:
            type: string
        "404":
          description: Chat no encontrado
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene mensajes de un chat directo
      tags:
      - Chat
  /chat/direct/{otherUserId}:
    post:
      consumes:
      - application/json
      description: Crea o encuentra un chat directo entre el usuario autenticado y
        otro usuario
      parameters:
      - description: ID del otro usuario
        in: path
        name: otherUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Chat directo creado o encontrado
          schema:
            $ref: '#/definitions/models.DirectChat'
        "400":
          description: Solicitud inválida
          schema:
            type: string
        "401":
          description: No autorizado
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Crea un chat directo
      tags:
      - Chat
  /chat/direct/me:
    get:
      consumes:
      - application/json
      description: Devuelve todos los chats directos del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Lista de chats directos
          schema:
            items:
              $ref: '#/definitions/models.DirectChat'
            type: array
        "401":
          description: No autorizado
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene chats directos
      tags:
      - Chat
  /chat/rooms:
    get:
      consumes:
      - application/json
      description: Devuelve todas las salas ordenadas por fecha de actualización descendente
      produces:
      - application/json
      responses:
        "200":
          description: Lista de salas
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "401":
          description: No autorizado
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene todas las salas
      tags:
      - Chat
    post:
      consumes:
      - application/json
      description: Crea una nueva sala de chat con el usuario actual como propietario
      parameters:
      - description: Detalles de la sala
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Sala creada exitosamente
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Solicitud inválida
          schema:
            type: string
        "401":
          description: No autorizado
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Crea una nueva sala de chat
      tags:
      - Chat
  /chat/rooms/{roomId}:
    get:
      consumes:
      - application/json
      description: Devuelve los detalles de una sala específica
      parameters:
      - description: ID de la sala
        in: path
        name: roomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detalles de la sala
          schema:
            $ref: '#/definitions/models.Room'
        "401":
          description: No autorizado
          schema:
            type: string
        "404":
          description: Sala no encontrada
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene una sala por ID
      tags:
      - Chat
  /chat/rooms/{roomId}/join:
    post:
      consumes:
      - application/json
      description: Permite al usuario autenticado unirse a una sala específica
      parameters:
      - description: ID de la sala
        in: path
        name: roomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Usuario unido exitosamente
          schema:
            type: string
        "401":
          description: No autorizado
          schema:
            type: string
        "403":
          description: No permitido unirse a esta sala
          schema:
            type: string
        "404":
          description: Sala no encontrada
          schema:
            type: string
        "409":
          description: Usuario ya es miembro de la sala
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Unirse a una sala
      tags:
      - Chat
  /chat/rooms/{roomId}/messages:
    get:
      consumes:
      - application/json
      description: Devuelve los mensajes de una sala específica sin paginación
      parameters:
      - description: ID de la sala
        in: path
        name: roomId
        required: true
        type: string
      - default: 50
        description: Límite de mensajes a obtener
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de mensajes de la sala
          schema:
            items:
              $ref: '#/definitions/models.MessageResponse'
            type: array
        "401":
          description: No autorizado
          schema:
            type: string
        "404":
          description: Sala no encontrada
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene mensajes de una sala (versión simple)
      tags:
      - Chat
  /chat/rooms/me:
    get:
      consumes:
      - application/json
      description: Devuelve todas las salas a las que pertenece el usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Lista de salas
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "401":
          description: No autorizado
          schema:
            type: string
        "500":
          description: Error interno del servidor
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Obtiene las salas del usuario
      tags:
      - Chat
  /chat/ws:
    get:
      consumes:
      - application/json
      description: Establece una conexión WebSocket para mensajería en tiempo real
      parameters:
      - description: Firebase Auth Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols a WebSocket
          schema:
            type: string
        "401":
          description: No autorizado
          schema:
            type: string
      summary: Conexión WebSocket para chat en tiempo real
      tags:
      - Chat
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
